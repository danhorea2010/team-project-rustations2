// Generated by diesel_ext

use diesel::Queryable;
use diesel::Insertable;
use crate::dtos::todo::NewTodoDTO;
use crate::dtos::todo::TodoDTO;
use crate::schema::todos;

#[derive(Queryable, Debug, Clone)]
pub struct Todo {
    pub id: i32,
    pub title: String,
    pub description: Option<String>,
    pub visibility: i16,
}

#[derive(Insertable)]
#[diesel(table_name = todos)]
pub struct NewTodo {
    pub title: String,
    pub description: Option<String>,
    pub visibility: i16,
}

impl From<Todo> for NewTodo {
    fn from(todo: Todo) -> Self {
        NewTodo { 
            title: todo.title,
            description: todo.description, 
            visibility: todo.visibility 
        }
    }
}

impl From<TodoDTO> for Todo {
    fn from(dto: TodoDTO) -> Self {
        Todo {
            id: dto.id,
            title: dto.title,
            description: dto.description,
            visibility: dto.visibility
        }
    }
} 

impl From<NewTodoDTO> for NewTodo {
    fn from(dto: NewTodoDTO) -> Self {
        NewTodo { 
            title: dto.title.clone(),
            description: dto.description.clone(), 
            visibility: dto.visibility 
        }
    }
}
